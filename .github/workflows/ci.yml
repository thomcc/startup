name: CI

on:
  pull_request:
  push:
    branches:
      - main

env:
  RUST_BACKTRACE: 1
  RUSTFLAGS: -Dwarnings
  CI: 1

jobs:
  test:
    name: Test Rust ${{ matrix.rust }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        # Note:
        rust: [stable, "1.37.0"]
        # TODO: test more w/ cross or something
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - uses: actions/checkout@v2
      - uses: hecrj/setup-rust-action@v1
        with:
          rust-version: ${{ matrix.rust }}
      - run: cargo test --verbose
      - run: cargo run --manifest-path=testcases/smokebin/Cargo.toml
      - run: cargo clean
      # Note: libloading doesn't support 1.37.0, so we skip these tests. There
      # isn't reason to believe this would be very rust-version dependent.
      - run: cargo build --manifest-path=testcases/dylib/Cargo.toml
        if: matrix.rust != '1.37.0'
      - run: cargo run --manifest-path=testcases/dylib_runner/Cargo.toml -- testcases/target/debug dylibtest
        if: matrix.rust != '1.37.0'
      - run: cargo build --manifest-path=testcases/paniclib/Cargo.toml
        if: matrix.rust != '1.37.0'
      - run: bash scripts/test_panic_afterbuild.sh
        env: { RUST_BACKTRACE: 0 }
        if: matrix.rust != '1.37.0' && matrix.os != 'windows-latest'

  checks:
    name: Lint and rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: hecrj/setup-rust-action@v1
        with:
          components: rustfmt
      - run: cargo check --all-targets --verbose
      - run: cargo check --all-targets --verbose --manifest-path=testcases/Cargo.toml
      - run: cargo fmt --all -- --check
      - run: cargo fmt --all --manifest-path=testcases/Cargo.toml -- --check
